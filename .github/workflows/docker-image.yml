name: Docker Image CI

on:
  push:
    paths: 
      - Dockerfile 
      - bot\**
  pull_request:
    branches: [ "main" ]

jobs:

  build:

    runs-on: ubuntu

    steps:
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERUSENAME }}
          password: ${{ secrets.DOCKERTOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: vincdelta/discordbot:dev

  test:
      
      needs: build
      runs-on: ubuntu
  
      steps:
        - name: rebuilding DO App
          shell: pwsh
          env:
            DIGITALOCEAN_APP_ID_DEV: ${{ secrets.DIGITALOCEAN_APP_ID_DEV }}
            DIGITALOCEAN_ACCESS_TOKEN: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
          run: | 
            $header = @{"Content-Type" = "application/json";"Authorization" = "Bearer $env:DIGITALOCEAN_ACCESS_TOKEN"}
            $ListApps = Invoke-RestMethod -Uri https://api.digitalocean.com/v2/apps -Method GET -Headers $header
            $DevAppID = $($ListApps.apps | Where-Object {$_.spec.name -eq "mapbot-dev"}).id
            $rebuild=Invoke-RestMethod -Uri "https://api.digitalocean.com/v2/apps/$DevAppID/deployments" -header $header -method POST -ContentType 'application/json'
            if($rebuild.deployment){
              write-output 'rebuild started'
              $deploymentID=$rebuild.deployment.id
              do{
                $StatusOutput = "Still rebuilding $status..."
                if($null -ne $StatusOutputFormat){$StatusOutputFormat = "$StatusOutputFormat{0}" -f '.'}else{$StatusOutputFormat = "$StatusOutput{0}" -f '.'}
                $status = Invoke-RestMethod -Uri https://api.digitalocean.com/v2/apps/$DevAppID/deployments/$deploymentID -Method GET -Headers $header
                $status = $status.deployment.phase
                write-output $StatusOutputFormat
              }until($status -eq 'ACTIVE')
              write-output 'rebuild finished'
            }
            else{throw 'something went wrong'}
